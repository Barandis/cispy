/*!
 * Copyright (c) 2017-2018 Thomas Otterson
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */
!(function(e, t) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = t())
    : 'function' == typeof define && define.amd
    ? define([], t)
    : 'object' == typeof exports
    ? (exports.cispy = t())
    : (e.cispy = t());
})(window, function() {
  return (function(e) {
    var t = {};
    function n(r) {
      if (t[r]) return t[r].exports;
      var o = (t[r] = { i: r, l: !1, exports: {} });
      return e[r].call(o.exports, o, o.exports, n), (o.l = !0), o.exports;
    }
    return (
      (n.m = e),
      (n.c = t),
      (n.d = function(e, t, r) {
        n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r });
      }),
      (n.r = function(e) {
        'undefined' != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
          Object.defineProperty(e, '__esModule', { value: !0 });
      }),
      (n.t = function(e, t) {
        if ((1 & t && (e = n(e)), 8 & t)) return e;
        if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
        var r = Object.create(null);
        if ((n.r(r), Object.defineProperty(r, 'default', { enumerable: !0, value: e }), 2 & t && 'string' != typeof e))
          for (var o in e)
            n.d(
              r,
              o,
              function(t) {
                return e[t];
              }.bind(null, o)
            );
        return r;
      }),
      (n.n = function(e) {
        var t =
          e && e.__esModule
            ? function() {
                return e.default;
              }
            : function() {
                return e;
              };
        return n.d(t, 'a', t), t;
      }),
      (n.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }),
      (n.p = ''),
      n((n.s = 8))
    );
  })([
    function(e, t, n) {
      var r,
        o = n(9),
        i = n(2),
        a = i.queue,
        u = i.fixed,
        c = i.EMPTY,
        s = n(5).dispatch,
        f = n(13).protocols,
        l = 64,
        p = 1024,
        h = Symbol(),
        v = Symbol('CLOSED'),
        d = Symbol('DEFAULT');
      function m(e) {
        return !(!e || !e[f.reduced]);
      }
      function y(e) {
        return { value: e, box: h };
      }
      function g(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
          o = r.maxDirty,
          i = void 0 === o ? l : o,
          u = r.maxQueued,
          d = void 0 === u ? p : u,
          g = a(),
          b = a(),
          x = 0,
          w = 0,
          k = !1;
        return {
          get closed() {
            return k;
          },
          get buffered() {
            return !!e;
          },
          get timeout() {
            return !!n;
          },
          put: function(n, r) {
            if (n === v) throw Error('Cannot put CLOSED on a channel');
            if (k) return r.commit(), y(!1);
            var o, a;
            if (e && !e.full) {
              r.commit();
              for (var u = m(t[f.step](e, n)); 0 !== e.count && (o = g.dequeue()) !== c; )
                o.active &&
                  (function() {
                    a = o.commit();
                    var t = e.remove();
                    a &&
                      s(function() {
                        return a(t);
                      });
                  })();
              return u && this.close(), y(!0);
            }
            for (; (o = g.dequeue()) !== c; )
              if (o.active)
                return (
                  r.commit(),
                  (a = o.commit()) &&
                    s(function() {
                      return a(n);
                    }),
                  y(!0)
                );
            if (
              (w > i
                ? (b.filter(function(e) {
                    return e.handler.active;
                  }),
                  (w = 0))
                : w++,
              b.count >= d)
            )
              throw Error('No more than '.concat(d, ' pending puts are allowed on a single channel'));
            return (
              b.enqueue(
                (function(e, t) {
                  return { handler: e, value: t, box: h };
                })(r, n)
              ),
              null
            );
          },
          take: function(n) {
            var r, o, a;
            if (e && e.count > 0) {
              n.commit();
              for (var u = e.remove(); !e.full && (r = b.dequeue()) !== c; )
                (o = r.handler).active &&
                  ((a = o.commit()) &&
                    s(function() {
                      return a(!0);
                    }),
                  m(t[f.step](e, r.value)) && this.close());
              return y(u);
            }
            for (; (r = b.dequeue()) !== c; )
              if ((o = r.handler).active)
                return (
                  (a = o.commit()) &&
                    s(function() {
                      return a(!0);
                    }),
                  y(r.value)
                );
            if (k) return n.commit(), y(v);
            if (
              (x > i
                ? (g.filter(function(e) {
                    return e.active;
                  }),
                  (x = 0))
                : x++,
              g.count >= d)
            )
              throw Error('No more than '.concat(d, ' pending takes are allowed on a single channel'));
            return g.enqueue(n), null;
          },
          close: function() {
            if (!k) {
              var n, r, o;
              if (((k = !0), e))
                for (t[f.result](e); 0 !== e.count && (n = g.dequeue()) !== c; )
                  n.active &&
                    (function() {
                      o = n.commit();
                      var t = e.remove();
                      o &&
                        s(function() {
                          return o(t);
                        });
                    })();
              for (; (n = g.dequeue()) !== c; )
                n.active &&
                  (o = n.commit()) &&
                  s(function() {
                    return o(v);
                  });
              for (; (r = b.dequeue()) !== c; )
                r.handler.active &&
                  (o = r.handler.commit()) &&
                  s(function() {
                    return o(!1);
                  });
            }
          }
        };
      }
      var b = function() {
        return v;
      };
      function x(e, t, n) {
        var r = t(n);
        return r !== v && e.add(r), e;
      }
      function w(e) {
        var t,
          n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : b;
        return (
          o((t = {}), f.step, function(t, r) {
            try {
              return e[f.step](t, r);
            } catch (e) {
              return x(t, n, e);
            }
          }),
          o(t, f.result, function(t) {
            try {
              return e[f.result](t);
            } catch (e) {
              return x(t, n, e);
            }
          }),
          t
        );
      }
      var k = (o((r = {}), f.init, function() {
        throw Error('init not available');
      }),
      o(r, f.step, function(e, t) {
        return e.add(t), e;
      }),
      o(r, f.result, function(e) {
        return e;
      }),
      r);
      function E(e) {
        e.close();
      }
      e.exports = {
        CLOSED: v,
        DEFAULT: d,
        box: y,
        isBox: function(e) {
          return e && e.box === h;
        },
        chan: function() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
            t = arguments.length > 1 ? arguments[1] : void 0,
            n = arguments.length > 2 ? arguments[2] : void 0,
            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
            o = 0 === e ? null : e,
            i = 'number' == typeof o ? u(o) : o;
          if (t && !i) throw Error('Only buffered channels can use transformers');
          return g(i, w(t ? t(k) : k, n), !1, r);
        },
        timeout: function(e) {
          var t = g(null, w(k), !0);
          return (
            setTimeout(function() {
              return E(t);
            }, e),
            t
          );
        },
        close: E
      };
    },
    function(e, t, n) {
      var r = n(7),
        o = n(0),
        i = o.box,
        a = o.isBox,
        u = o.chan,
        c = o.DEFAULT;
      function s(e) {
        return {
          get active() {
            return !0;
          },
          commit: function() {
            return e;
          }
        };
      }
      function f(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
          o = e.length;
        if (0 === o) throw Error('Alts called with no operations');
        var u,
          s = !!n.priority,
          f = s
            ? []
            : (function(e) {
                for (var t = [], n = 0; n < e; ++n) t.push(n);
                for (var r = e - 1; r > 0; --r) {
                  var o = Math.floor(Math.random() * (r + 1)),
                    i = t[r];
                  (t[r] = t[o]), (t[o] = i);
                }
                return t;
              })(o),
          l = i(!0);
        function p(e) {
          return (function(e, t) {
            return {
              get active() {
                return e.value;
              },
              commit: function() {
                return (e.value = !1), t;
              }
            };
          })(l, function(n) {
            t({ value: n, channel: e });
          });
        }
        for (var h = 0; h < o; ++h) {
          var v = e[s ? h : f[h]],
            d = void 0,
            m = void 0;
          if (Array.isArray(v)) {
            var y = r(v, 2);
            (d = y[0]), (m = y[1]), (u = d.put(m, p(d)));
          } else u = (d = v).take(p(d));
          if (a(u)) {
            t({ value: u.value, channel: d });
            break;
          }
        }
        !a(u) && n.hasOwnProperty('default') && l.value && ((l.value = !1), t({ value: n.default, channel: c }));
      }
      function l(e, t, n) {
        var r = e.put(t, s(n));
        r && n && n(r.value);
      }
      function p(e, t) {
        var n = e.take(s(t));
        n && t && t(n.value);
      }
      e.exports = {
        altsAsync: f,
        putAsync: l,
        takeAsync: p,
        put: function(e, t) {
          return new Promise(function(n) {
            l(e, t, n);
          });
        },
        take: function(e) {
          return new Promise(function(t) {
            p(e, t);
          });
        },
        takeOrThrow: function(e) {
          return new Promise(function(t, n) {
            p(e, function(e) {
              Error.prototype.isPrototypeOf(e) ? n(e) : t(e);
            });
          });
        },
        alts: function(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return new Promise(function(n) {
            f(e, n, t);
          });
        },
        sleep: function() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
          return new Promise(function(t) {
            var n = u();
            setTimeout(function() {
              return n.close();
            }, e),
              p(n, t);
          });
        },
        go: function(e) {
          for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
          return e.apply(void 0, n);
        }
      };
    },
    function(e, t) {
      var n = Symbol('EMPTY');
      function r() {
        return {
          store: [],
          pointer: 0,
          get count() {
            return this.store.length - this.pointer;
          },
          get empty() {
            return 0 === this.store.length;
          },
          enqueue: function(e) {
            this.store.push(e);
          },
          dequeue: function() {
            if (this.empty) return n;
            var e = this.store[this.pointer];
            return (
              2 * ++this.pointer >= this.store.length &&
                ((this.store = this.store.slice(this.pointer)), (this.pointer = 0)),
              e
            );
          },
          peek: function() {
            return this.empty ? n : this.store[this.pointer];
          },
          filter: function(e) {
            for (var t = 0, n = this.count; t < n; ++t) {
              var r = this.dequeue();
              e(r) && this.enqueue(r);
            }
          }
        };
      }
      function o(e) {
        var t = r();
        return {
          get queue() {
            return t;
          },
          get size() {
            return e;
          },
          get count() {
            return this.queue.count;
          },
          remove: function() {
            return this.queue.dequeue();
          }
        };
      }
      e.exports = {
        EMPTY: n,
        queue: r,
        fixed: function(e) {
          return Object.assign(
            Object.create(o(e), {
              full: {
                get: function() {
                  return this.queue.count >= this.size;
                }
              }
            }),
            {
              add: function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                for (var r = 0; r < t.length; r++) {
                  var o = t[r];
                  this.queue.enqueue(o);
                }
              }
            }
          );
        },
        dropping: function(e) {
          return Object.assign(
            Object.create(o(e), {
              full: {
                get: function() {
                  return !1;
                }
              }
            }),
            {
              add: function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                for (var r = 0; r < t.length; r++) {
                  var o = t[r];
                  this.queue.count < this.size && this.queue.enqueue(o);
                }
              }
            }
          );
        },
        sliding: function(e) {
          return Object.assign(
            Object.create(o(e), {
              full: {
                get: function() {
                  return !1;
                }
              }
            }),
            {
              add: function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                for (var r = 0; r < t.length; r++) {
                  var o = t[r];
                  this.queue.count === this.size && this.queue.dequeue(), this.queue.enqueue(o);
                }
              }
            }
          );
        }
      };
    },
    function(e, t, n) {
      e.exports = n(19);
    },
    function(e, t) {
      function n(e, t, n, r, o, i, a) {
        try {
          var u = e[i](a),
            c = u.value;
        } catch (e) {
          return void n(e);
        }
        u.done ? t(c) : Promise.resolve(c).then(r, o);
      }
      e.exports = function(e) {
        return function() {
          var t = this,
            r = arguments;
          return new Promise(function(o, i) {
            var a = e.apply(t, r);
            function u(e) {
              n(a, o, i, u, c, 'next', e);
            }
            function c(e) {
              n(a, o, i, u, c, 'throw', e);
            }
            u(void 0);
          });
        };
      };
    },
    function(e, t, n) {
      (function(t) {
        var r = n(2),
          o = r.queue(),
          i = r.EMPTY,
          a = Symbol('SET_IMMEDIATE'),
          u = Symbol('MESSAGE_CHANNEL'),
          c = Symbol('SET_TIMEOUT'),
          s = { batchSize: 1024, dispatchMethod: a },
          f = h();
        var l = !1,
          p = !1;
        function h() {
          switch (
            (function() {
              switch (s.dispatchMethod) {
                case u:
                  return 'undefined' != typeof MessageChannel ? u : c;
                case c:
                  return c;
                default:
                  return void 0 !== t ? a : 'undefined' != typeof MessageChannel ? u : c;
              }
            })()
          ) {
            case a:
              return function() {
                (p && l) || ((p = !0), t(v));
              };
            case u:
              var e = new MessageChannel();
              return (
                (e.port1.onmessage = function() {
                  return v();
                }),
                function() {
                  (p && l) || ((p = !0), e.port2.postMessage(0));
                }
              );
            case c:
              return function() {
                (p && l) || ((p = !0), setTimeout(v, 0));
              };
          }
        }
        function v() {
          (l = !0), (p = !1);
          for (var e = 0; ; ) {
            var t = o.dequeue();
            if (t === i) break;
            if ((t(), e >= s.taskBatchSize)) break;
            e++;
          }
          (l = !1), o.length && f();
        }
        e.exports = {
          config: function(e) {
            for (var t in s) e.hasOwnProperty(t) && ((s[t] = e[t]), 'dispatchMethod' === t && (f = h()));
          },
          dispatch: function(e) {
            o.enqueue(e), f();
          },
          SET_IMMEDIATE: a,
          MESSAGE_CHANNEL: u,
          SET_TIMEOUT: c
        };
      }.call(this, n(10).setImmediate));
    },
    function(e, t) {
      var n;
      n = (function() {
        return this;
      })();
      try {
        n = n || Function('return this')() || (0, eval)('this');
      } catch (e) {
        'object' == typeof window && (n = window);
      }
      e.exports = n;
    },
    function(e, t, n) {
      var r = n(14),
        o = n(15),
        i = n(16);
      e.exports = function(e, t) {
        return r(e) || o(e, t) || i();
      };
    },
    function(e, t, n) {
      var r = n(2),
        o = r.fixed,
        i = r.sliding,
        a = r.dropping,
        u = r.EMPTY,
        c = n(0),
        s = c.chan,
        f = c.timeout,
        l = c.close,
        p = c.CLOSED,
        h = c.DEFAULT,
        v = n(1),
        d = v.putAsync,
        m = v.takeAsync,
        y = v.altsAsync,
        g = v.put,
        b = v.take,
        x = v.takeOrThrow,
        w = v.alts,
        k = v.sleep,
        E = v.go,
        T = n(5),
        O = T.config,
        S = T.SET_IMMEDIATE,
        A = T.MESSAGE_CHANNEL,
        L = T.SET_TIMEOUT,
        _ = n(17);
      e.exports = {
        go: E,
        put: g,
        take: b,
        takeOrThrow: x,
        alts: w,
        sleep: k,
        chan: s,
        timeout: f,
        close: l,
        putAsync: d,
        takeAsync: m,
        altsAsync: y,
        config: O,
        fixedBuffer: o,
        slidingBuffer: i,
        droppingBuffer: a,
        CLOSED: p,
        DEFAULT: h,
        EMPTY: u,
        SET_IMMEDIATE: S,
        MESSAGE_CHANNEL: A,
        SET_TIMEOUT: L,
        utils: _
      };
    },
    function(e, t) {
      e.exports = function(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 })
            : (e[t] = n),
          e
        );
      };
    },
    function(e, t, n) {
      (function(e) {
        var r = (void 0 !== e && e) || ('undefined' != typeof self && self) || window,
          o = Function.prototype.apply;
        function i(e, t) {
          (this._id = e), (this._clearFn = t);
        }
        (t.setTimeout = function() {
          return new i(o.call(setTimeout, r, arguments), clearTimeout);
        }),
          (t.setInterval = function() {
            return new i(o.call(setInterval, r, arguments), clearInterval);
          }),
          (t.clearTimeout = t.clearInterval = function(e) {
            e && e.close();
          }),
          (i.prototype.unref = i.prototype.ref = function() {}),
          (i.prototype.close = function() {
            this._clearFn.call(r, this._id);
          }),
          (t.enroll = function(e, t) {
            clearTimeout(e._idleTimeoutId), (e._idleTimeout = t);
          }),
          (t.unenroll = function(e) {
            clearTimeout(e._idleTimeoutId), (e._idleTimeout = -1);
          }),
          (t._unrefActive = t.active = function(e) {
            clearTimeout(e._idleTimeoutId);
            var t = e._idleTimeout;
            t >= 0 &&
              (e._idleTimeoutId = setTimeout(function() {
                e._onTimeout && e._onTimeout();
              }, t));
          }),
          n(11),
          (t.setImmediate =
            ('undefined' != typeof self && self.setImmediate) ||
            (void 0 !== e && e.setImmediate) ||
            (this && this.setImmediate)),
          (t.clearImmediate =
            ('undefined' != typeof self && self.clearImmediate) ||
            (void 0 !== e && e.clearImmediate) ||
            (this && this.clearImmediate));
      }.call(this, n(6)));
    },
    function(e, t, n) {
      (function(e, t) {
        !(function(e, n) {
          'use strict';
          if (!e.setImmediate) {
            var r,
              o = 1,
              i = {},
              a = !1,
              u = e.document,
              c = Object.getPrototypeOf && Object.getPrototypeOf(e);
            (c = c && c.setTimeout ? c : e),
              '[object process]' === {}.toString.call(e.process)
                ? (r = function(e) {
                    t.nextTick(function() {
                      f(e);
                    });
                  })
                : (function() {
                    if (e.postMessage && !e.importScripts) {
                      var t = !0,
                        n = e.onmessage;
                      return (
                        (e.onmessage = function() {
                          t = !1;
                        }),
                        e.postMessage('', '*'),
                        (e.onmessage = n),
                        t
                      );
                    }
                  })()
                ? (function() {
                    var t = 'setImmediate$' + Math.random() + '$',
                      n = function(n) {
                        n.source === e &&
                          'string' == typeof n.data &&
                          0 === n.data.indexOf(t) &&
                          f(+n.data.slice(t.length));
                      };
                    e.addEventListener ? e.addEventListener('message', n, !1) : e.attachEvent('onmessage', n),
                      (r = function(n) {
                        e.postMessage(t + n, '*');
                      });
                  })()
                : e.MessageChannel
                ? (function() {
                    var e = new MessageChannel();
                    (e.port1.onmessage = function(e) {
                      f(e.data);
                    }),
                      (r = function(t) {
                        e.port2.postMessage(t);
                      });
                  })()
                : u && 'onreadystatechange' in u.createElement('script')
                ? (function() {
                    var e = u.documentElement;
                    r = function(t) {
                      var n = u.createElement('script');
                      (n.onreadystatechange = function() {
                        f(t), (n.onreadystatechange = null), e.removeChild(n), (n = null);
                      }),
                        e.appendChild(n);
                    };
                  })()
                : (r = function(e) {
                    setTimeout(f, 0, e);
                  }),
              (c.setImmediate = function(e) {
                'function' != typeof e && (e = new Function('' + e));
                for (var t = new Array(arguments.length - 1), n = 0; n < t.length; n++) t[n] = arguments[n + 1];
                var a = { callback: e, args: t };
                return (i[o] = a), r(o), o++;
              }),
              (c.clearImmediate = s);
          }
          function s(e) {
            delete i[e];
          }
          function f(e) {
            if (a) setTimeout(f, 0, e);
            else {
              var t = i[e];
              if (t) {
                a = !0;
                try {
                  !(function(e) {
                    var t = e.callback,
                      r = e.args;
                    switch (r.length) {
                      case 0:
                        t();
                        break;
                      case 1:
                        t(r[0]);
                        break;
                      case 2:
                        t(r[0], r[1]);
                        break;
                      case 3:
                        t(r[0], r[1], r[2]);
                        break;
                      default:
                        t.apply(n, r);
                    }
                  })(t);
                } finally {
                  s(e), (a = !1);
                }
              }
            }
          }
        })('undefined' == typeof self ? (void 0 === e ? this : e) : self);
      }.call(this, n(6), n(12)));
    },
    function(e, t) {
      var n,
        r,
        o = (e.exports = {});
      function i() {
        throw new Error('setTimeout has not been defined');
      }
      function a() {
        throw new Error('clearTimeout has not been defined');
      }
      function u(e) {
        if (n === setTimeout) return setTimeout(e, 0);
        if ((n === i || !n) && setTimeout) return (n = setTimeout), setTimeout(e, 0);
        try {
          return n(e, 0);
        } catch (t) {
          try {
            return n.call(null, e, 0);
          } catch (t) {
            return n.call(this, e, 0);
          }
        }
      }
      !(function() {
        try {
          n = 'function' == typeof setTimeout ? setTimeout : i;
        } catch (e) {
          n = i;
        }
        try {
          r = 'function' == typeof clearTimeout ? clearTimeout : a;
        } catch (e) {
          r = a;
        }
      })();
      var c,
        s = [],
        f = !1,
        l = -1;
      function p() {
        f && c && ((f = !1), c.length ? (s = c.concat(s)) : (l = -1), s.length && h());
      }
      function h() {
        if (!f) {
          var e = u(p);
          f = !0;
          for (var t = s.length; t; ) {
            for (c = s, s = []; ++l < t; ) c && c[l].run();
            (l = -1), (t = s.length);
          }
          (c = null),
            (f = !1),
            (function(e) {
              if (r === clearTimeout) return clearTimeout(e);
              if ((r === a || !r) && clearTimeout) return (r = clearTimeout), clearTimeout(e);
              try {
                r(e);
              } catch (t) {
                try {
                  return r.call(null, e);
                } catch (t) {
                  return r.call(this, e);
                }
              }
            })(e);
        }
      }
      function v(e, t) {
        (this.fun = e), (this.array = t);
      }
      function d() {}
      (o.nextTick = function(e) {
        var t = new Array(arguments.length - 1);
        if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
        s.push(new v(e, t)), 1 !== s.length || f || u(h);
      }),
        (v.prototype.run = function() {
          this.fun.apply(null, this.array);
        }),
        (o.title = 'browser'),
        (o.browser = !0),
        (o.env = {}),
        (o.argv = []),
        (o.version = ''),
        (o.versions = {}),
        (o.on = d),
        (o.addListener = d),
        (o.once = d),
        (o.off = d),
        (o.removeListener = d),
        (o.removeAllListeners = d),
        (o.emit = d),
        (o.prependListener = d),
        (o.prependOnceListener = d),
        (o.listeners = function(e) {
          return [];
        }),
        (o.binding = function(e) {
          throw new Error('process.binding is not supported');
        }),
        (o.cwd = function() {
          return '/';
        }),
        (o.chdir = function(e) {
          throw new Error('process.chdir is not supported');
        }),
        (o.umask = function() {
          return 0;
        });
    },
    function(e, t) {
      var n = !0,
        r = 'undefined' != typeof Symbol;
      function o(e) {
        return n && r ? Symbol.for(e) : '@@'.concat(e);
      }
      var i = {
        iterator: r ? Symbol.iterator : '@@iterator',
        init: o('transducer/init'),
        step: o('transducer/step'),
        result: o('transducer/result'),
        reduced: o('transducer/reduced'),
        value: o('transducer/value')
      };
      e.exports = { protocols: i };
    },
    function(e, t) {
      e.exports = function(e) {
        if (Array.isArray(e)) return e;
      };
    },
    function(e, t) {
      e.exports = function(e, t) {
        var n = [],
          r = !0,
          o = !1,
          i = void 0;
        try {
          for (
            var a, u = e[Symbol.iterator]();
            !(r = (a = u.next()).done) && (n.push(a.value), !t || n.length !== t);
            r = !0
          );
        } catch (e) {
          (o = !0), (i = e);
        } finally {
          try {
            r || null == u.return || u.return();
          } finally {
            if (o) throw i;
          }
        }
        return n;
      };
    },
    function(e, t) {
      e.exports = function() {
        throw new TypeError('Invalid attempt to destructure non-iterable instance');
      };
    },
    function(e, t, n) {
      var r = n(18),
        o = n(21),
        i = n(26);
      e.exports = Object.assign({}, r, o, i);
    },
    function(e, t, n) {
      var r = n(7),
        o = n(3),
        i = n(4),
        a = n(0),
        u = a.chan,
        c = a.close,
        s = a.CLOSED,
        f = n(1),
        l = f.put,
        p = f.take,
        h = f.putAsync;
      function v(e, t, n) {
        var r = u();
        function a() {
          return (a = i(
            o.mark(function i() {
              var a, u;
              return o.wrap(
                function(o) {
                  for (;;)
                    switch ((o.prev = o.next)) {
                      case 0:
                        a = n;
                      case 1:
                        return (o.next = 3), p(t);
                      case 3:
                        if ((u = o.sent) !== s) {
                          o.next = 7;
                          break;
                        }
                        return (
                          h(r, a, function() {
                            return c(r);
                          }),
                          o.abrupt('return')
                        );
                      case 7:
                        a = e(a, u);
                      case 8:
                        o.next = 1;
                        break;
                      case 10:
                      case 'end':
                        return o.stop();
                    }
                },
                i,
                this
              );
            })
          )).apply(this, arguments);
        }
        return (
          (function() {
            a.apply(this, arguments);
          })(),
          r
        );
      }
      e.exports = {
        reduce: v,
        onto: function(e, t) {
          var n = Array.isArray(e) ? [u(e.length), e] : [e, t],
            a = r(n, 2),
            s = a[0],
            f = a[1];
          function p() {
            return (p = i(
              o.mark(function e() {
                var t, n, r, i, a, u;
                return o.wrap(
                  function(e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          (t = !0), (n = !1), (r = void 0), (e.prev = 3), (i = f[Symbol.iterator]());
                        case 5:
                          if ((t = (a = i.next()).done)) {
                            e.next = 12;
                            break;
                          }
                          return (u = a.value), (e.next = 9), l(s, u);
                        case 9:
                          (t = !0), (e.next = 5);
                          break;
                        case 12:
                          e.next = 18;
                          break;
                        case 14:
                          (e.prev = 14), (e.t0 = e.catch(3)), (n = !0), (r = e.t0);
                        case 18:
                          (e.prev = 18), (e.prev = 19), t || null == i.return || i.return();
                        case 21:
                          if (((e.prev = 21), !n)) {
                            e.next = 24;
                            break;
                          }
                          throw r;
                        case 24:
                          return e.finish(21);
                        case 25:
                          return e.finish(18);
                        case 26:
                          c(s);
                        case 27:
                        case 'end':
                          return e.stop();
                      }
                  },
                  e,
                  this,
                  [[3, 14, 18, 26], [19, , 21, 25]]
                );
              })
            )).apply(this, arguments);
          }
          return (
            (function() {
              p.apply(this, arguments);
            })(),
            s
          );
        },
        into: function(e, t) {
          var n = Array.isArray(e) ? [e, t] : [[], e],
            o = r(n, 2),
            i = o[0];
          return v(
            function(e, t) {
              return e.push(t), e;
            },
            o[1],
            i.slice()
          );
        }
      };
    },
    function(e, t, n) {
      var r =
          (function() {
            return this || ('object' == typeof self && self);
          })() || Function('return this')(),
        o = r.regeneratorRuntime && Object.getOwnPropertyNames(r).indexOf('regeneratorRuntime') >= 0,
        i = o && r.regeneratorRuntime;
      if (((r.regeneratorRuntime = void 0), (e.exports = n(20)), o)) r.regeneratorRuntime = i;
      else
        try {
          delete r.regeneratorRuntime;
        } catch (e) {
          r.regeneratorRuntime = void 0;
        }
    },
    function(e, t) {
      !(function(t) {
        'use strict';
        var n,
          r = Object.prototype,
          o = r.hasOwnProperty,
          i = 'function' == typeof Symbol ? Symbol : {},
          a = i.iterator || '@@iterator',
          u = i.asyncIterator || '@@asyncIterator',
          c = i.toStringTag || '@@toStringTag',
          s = 'object' == typeof e,
          f = t.regeneratorRuntime;
        if (f) s && (e.exports = f);
        else {
          (f = t.regeneratorRuntime = s ? e.exports : {}).wrap = x;
          var l = 'suspendedStart',
            p = 'suspendedYield',
            h = 'executing',
            v = 'completed',
            d = {},
            m = {};
          m[a] = function() {
            return this;
          };
          var y = Object.getPrototypeOf,
            g = y && y(y(M([])));
          g && g !== r && o.call(g, a) && (m = g);
          var b = (T.prototype = k.prototype = Object.create(m));
          (E.prototype = b.constructor = T),
            (T.constructor = E),
            (T[c] = E.displayName = 'GeneratorFunction'),
            (f.isGeneratorFunction = function(e) {
              var t = 'function' == typeof e && e.constructor;
              return !!t && (t === E || 'GeneratorFunction' === (t.displayName || t.name));
            }),
            (f.mark = function(e) {
              return (
                Object.setPrototypeOf
                  ? Object.setPrototypeOf(e, T)
                  : ((e.__proto__ = T), c in e || (e[c] = 'GeneratorFunction')),
                (e.prototype = Object.create(b)),
                e
              );
            }),
            (f.awrap = function(e) {
              return { __await: e };
            }),
            O(S.prototype),
            (S.prototype[u] = function() {
              return this;
            }),
            (f.AsyncIterator = S),
            (f.async = function(e, t, n, r) {
              var o = new S(x(e, t, n, r));
              return f.isGeneratorFunction(t)
                ? o
                : o.next().then(function(e) {
                    return e.done ? e.value : o.next();
                  });
            }),
            O(b),
            (b[c] = 'Generator'),
            (b[a] = function() {
              return this;
            }),
            (b.toString = function() {
              return '[object Generator]';
            }),
            (f.keys = function(e) {
              var t = [];
              for (var n in e) t.push(n);
              return (
                t.reverse(),
                function n() {
                  for (; t.length; ) {
                    var r = t.pop();
                    if (r in e) return (n.value = r), (n.done = !1), n;
                  }
                  return (n.done = !0), n;
                }
              );
            }),
            (f.values = M),
            (j.prototype = {
              constructor: j,
              reset: function(e) {
                if (
                  ((this.prev = 0),
                  (this.next = 0),
                  (this.sent = this._sent = n),
                  (this.done = !1),
                  (this.delegate = null),
                  (this.method = 'next'),
                  (this.arg = n),
                  this.tryEntries.forEach(_),
                  !e)
                )
                  for (var t in this) 't' === t.charAt(0) && o.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = n);
              },
              stop: function() {
                this.done = !0;
                var e = this.tryEntries[0].completion;
                if ('throw' === e.type) throw e.arg;
                return this.rval;
              },
              dispatchException: function(e) {
                if (this.done) throw e;
                var t = this;
                function r(r, o) {
                  return (u.type = 'throw'), (u.arg = e), (t.next = r), o && ((t.method = 'next'), (t.arg = n)), !!o;
                }
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                  var a = this.tryEntries[i],
                    u = a.completion;
                  if ('root' === a.tryLoc) return r('end');
                  if (a.tryLoc <= this.prev) {
                    var c = o.call(a, 'catchLoc'),
                      s = o.call(a, 'finallyLoc');
                    if (c && s) {
                      if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                      if (this.prev < a.finallyLoc) return r(a.finallyLoc);
                    } else if (c) {
                      if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                    } else {
                      if (!s) throw new Error('try statement without catch or finally');
                      if (this.prev < a.finallyLoc) return r(a.finallyLoc);
                    }
                  }
                }
              },
              abrupt: function(e, t) {
                for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                  var r = this.tryEntries[n];
                  if (r.tryLoc <= this.prev && o.call(r, 'finallyLoc') && this.prev < r.finallyLoc) {
                    var i = r;
                    break;
                  }
                }
                i && ('break' === e || 'continue' === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                var a = i ? i.completion : {};
                return (
                  (a.type = e),
                  (a.arg = t),
                  i ? ((this.method = 'next'), (this.next = i.finallyLoc), d) : this.complete(a)
                );
              },
              complete: function(e, t) {
                if ('throw' === e.type) throw e.arg;
                return (
                  'break' === e.type || 'continue' === e.type
                    ? (this.next = e.arg)
                    : 'return' === e.type
                    ? ((this.rval = this.arg = e.arg), (this.method = 'return'), (this.next = 'end'))
                    : 'normal' === e.type && t && (this.next = t),
                  d
                );
              },
              finish: function(e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                  var n = this.tryEntries[t];
                  if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), _(n), d;
                }
              },
              catch: function(e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                  var n = this.tryEntries[t];
                  if (n.tryLoc === e) {
                    var r = n.completion;
                    if ('throw' === r.type) {
                      var o = r.arg;
                      _(n);
                    }
                    return o;
                  }
                }
                throw new Error('illegal catch attempt');
              },
              delegateYield: function(e, t, r) {
                return (
                  (this.delegate = { iterator: M(e), resultName: t, nextLoc: r }),
                  'next' === this.method && (this.arg = n),
                  d
                );
              }
            });
        }
        function x(e, t, n, r) {
          var o = t && t.prototype instanceof k ? t : k,
            i = Object.create(o.prototype),
            a = new j(r || []);
          return (
            (i._invoke = (function(e, t, n) {
              var r = l;
              return function(o, i) {
                if (r === h) throw new Error('Generator is already running');
                if (r === v) {
                  if ('throw' === o) throw i;
                  return I();
                }
                for (n.method = o, n.arg = i; ; ) {
                  var a = n.delegate;
                  if (a) {
                    var u = A(a, n);
                    if (u) {
                      if (u === d) continue;
                      return u;
                    }
                  }
                  if ('next' === n.method) n.sent = n._sent = n.arg;
                  else if ('throw' === n.method) {
                    if (r === l) throw ((r = v), n.arg);
                    n.dispatchException(n.arg);
                  } else 'return' === n.method && n.abrupt('return', n.arg);
                  r = h;
                  var c = w(e, t, n);
                  if ('normal' === c.type) {
                    if (((r = n.done ? v : p), c.arg === d)) continue;
                    return { value: c.arg, done: n.done };
                  }
                  'throw' === c.type && ((r = v), (n.method = 'throw'), (n.arg = c.arg));
                }
              };
            })(e, n, a)),
            i
          );
        }
        function w(e, t, n) {
          try {
            return { type: 'normal', arg: e.call(t, n) };
          } catch (e) {
            return { type: 'throw', arg: e };
          }
        }
        function k() {}
        function E() {}
        function T() {}
        function O(e) {
          ['next', 'throw', 'return'].forEach(function(t) {
            e[t] = function(e) {
              return this._invoke(t, e);
            };
          });
        }
        function S(e) {
          var t;
          this._invoke = function(n, r) {
            function i() {
              return new Promise(function(t, i) {
                !(function t(n, r, i, a) {
                  var u = w(e[n], e, r);
                  if ('throw' !== u.type) {
                    var c = u.arg,
                      s = c.value;
                    return s && 'object' == typeof s && o.call(s, '__await')
                      ? Promise.resolve(s.__await).then(
                          function(e) {
                            t('next', e, i, a);
                          },
                          function(e) {
                            t('throw', e, i, a);
                          }
                        )
                      : Promise.resolve(s).then(
                          function(e) {
                            (c.value = e), i(c);
                          },
                          function(e) {
                            return t('throw', e, i, a);
                          }
                        );
                  }
                  a(u.arg);
                })(n, r, t, i);
              });
            }
            return (t = t ? t.then(i, i) : i());
          };
        }
        function A(e, t) {
          var r = e.iterator[t.method];
          if (r === n) {
            if (((t.delegate = null), 'throw' === t.method)) {
              if (e.iterator.return && ((t.method = 'return'), (t.arg = n), A(e, t), 'throw' === t.method)) return d;
              (t.method = 'throw'), (t.arg = new TypeError("The iterator does not provide a 'throw' method"));
            }
            return d;
          }
          var o = w(r, e.iterator, t.arg);
          if ('throw' === o.type) return (t.method = 'throw'), (t.arg = o.arg), (t.delegate = null), d;
          var i = o.arg;
          return i
            ? i.done
              ? ((t[e.resultName] = i.value),
                (t.next = e.nextLoc),
                'return' !== t.method && ((t.method = 'next'), (t.arg = n)),
                (t.delegate = null),
                d)
              : i
            : ((t.method = 'throw'),
              (t.arg = new TypeError('iterator result is not an object')),
              (t.delegate = null),
              d);
        }
        function L(e) {
          var t = { tryLoc: e[0] };
          1 in e && (t.catchLoc = e[1]),
            2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])),
            this.tryEntries.push(t);
        }
        function _(e) {
          var t = e.completion || {};
          (t.type = 'normal'), delete t.arg, (e.completion = t);
        }
        function j(e) {
          (this.tryEntries = [{ tryLoc: 'root' }]), e.forEach(L, this), this.reset(!0);
        }
        function M(e) {
          if (e) {
            var t = e[a];
            if (t) return t.call(e);
            if ('function' == typeof e.next) return e;
            if (!isNaN(e.length)) {
              var r = -1,
                i = function t() {
                  for (; ++r < e.length; ) if (o.call(e, r)) return (t.value = e[r]), (t.done = !1), t;
                  return (t.value = n), (t.done = !0), t;
                };
              return (i.next = i);
            }
          }
          return { next: I };
        }
        function I() {
          return { value: n, done: !0 };
        }
      })(
        (function() {
          return this || ('object' == typeof self && self);
        })() || Function('return this')()
      );
    },
    function(e, t, n) {
      var r = n(22),
        o = n(3),
        i = n(4),
        a = n(0),
        u = a.chan,
        c = a.close,
        s = a.CLOSED,
        f = n(1),
        l = f.put,
        p = f.take,
        h = f.alts,
        v = f.putAsync,
        d = f.takeAsync,
        m = { taps: Symbol('multitap/taps') };
      e.exports = {
        pipe: function(e, t, n) {
          function r() {
            return (r = i(
              o.mark(function r() {
                var i;
                return o.wrap(
                  function(r) {
                    for (;;)
                      switch ((r.prev = r.next)) {
                        case 0:
                          return (r.next = 2), p(e);
                        case 2:
                          if ((i = r.sent) !== s) {
                            r.next = 6;
                            break;
                          }
                          return n || c(t), r.abrupt('break', 12);
                        case 6:
                          return (r.next = 8), l(t, i);
                        case 8:
                          if (r.sent) {
                            r.next = 10;
                            break;
                          }
                          return r.abrupt('break', 12);
                        case 10:
                          r.next = 0;
                          break;
                        case 12:
                        case 'end':
                          return r.stop();
                      }
                  },
                  r,
                  this
                );
              })
            )).apply(this, arguments);
          }
          return (
            (function() {
              r.apply(this, arguments);
            })(),
            t
          );
        },
        partition: function(e, t) {
          var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
            a = u(n),
            f = u(r);
          function h() {
            return (h = i(
              o.mark(function n() {
                var r;
                return o.wrap(
                  function(n) {
                    for (;;)
                      switch ((n.prev = n.next)) {
                        case 0:
                          return (n.next = 2), p(t);
                        case 2:
                          if ((r = n.sent) !== s) {
                            n.next = 7;
                            break;
                          }
                          return c(a), c(f), n.abrupt('break', 11);
                        case 7:
                          return (n.next = 9), l(e(r) ? a : f, r);
                        case 9:
                          n.next = 0;
                          break;
                        case 11:
                        case 'end':
                          return n.stop();
                      }
                  },
                  n,
                  this
                );
              })
            )).apply(this, arguments);
          }
          return (
            (function() {
              h.apply(this, arguments);
            })(),
            [a, f]
          );
        },
        merge: function(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
            n = u(t),
            r = e.slice();
          function a() {
            return (a = i(
              o.mark(function e() {
                var t, i, a, u;
                return o.wrap(
                  function(e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if (0 !== r.length) {
                            e.next = 2;
                            break;
                          }
                          return e.abrupt('break', 15);
                        case 2:
                          return (e.next = 4), h(r);
                        case 4:
                          if (((t = e.sent), (i = t.value), (a = t.channel), i !== s)) {
                            e.next = 11;
                            break;
                          }
                          return (u = r.indexOf(a)), r.splice(u, 1), e.abrupt('continue', 13);
                        case 11:
                          return (e.next = 13), l(n, i);
                        case 13:
                          e.next = 0;
                          break;
                        case 15:
                          c(n);
                        case 16:
                        case 'end':
                          return e.stop();
                      }
                  },
                  e,
                  this
                );
              })
            )).apply(this, arguments);
          }
          return (
            (function() {
              a.apply(this, arguments);
            })(),
            n
          );
        },
        split: function(e) {
          for (var t = [], n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), a = 1; a < n; a++)
            r[a - 1] = arguments[a];
          var f = 0 === r.length ? [2] : r;
          if (
            1 === f.length &&
            (function(e) {
              return '[object Number]' === Object.prototype.toString.call(e) && isFinite(e);
            })(f[0])
          ) {
            var l = f[0];
            f = [];
            for (var h = 0; h < l; ++h) f.push(0);
          }
          for (var d = 0; d < f.length; d++) {
            var m = f[d];
            t.push(u(m));
          }
          var y = u(),
            g = 0;
          function b() {
            0 == --g && v(y);
          }
          function x() {
            return (x = i(
              o.mark(function n() {
                var r, i, a, u, f;
                return o.wrap(
                  function(n) {
                    for (;;)
                      switch ((n.prev = n.next)) {
                        case 0:
                          return (n.next = 2), p(e);
                        case 2:
                          if ((r = n.sent) !== s) {
                            n.next = 6;
                            break;
                          }
                          for (i = 0; i < t.length; i++) (a = t[i]), c(a);
                          return n.abrupt('break', 12);
                        case 6:
                          for (g = t.length, u = 0; u < t.length; u++) (f = t[u]), v(f, r, b);
                          return (n.next = 10), p(y);
                        case 10:
                          n.next = 0;
                          break;
                        case 12:
                        case 'end':
                          return n.stop();
                      }
                  },
                  n,
                  this
                );
              })
            )).apply(this, arguments);
          }
          return (
            (function() {
              x.apply(this, arguments);
            })(),
            t
          );
        },
        tap: function(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : u();
          return (
            e[m.taps] ||
              (function(e) {
                Object.defineProperty(e, m.taps, { configurable: !0, writable: !0, value: [] });
                var t = u(),
                  n = 0;
                function r() {
                  0 == --n && v(t);
                }
                function a() {
                  return (a = i(
                    o.mark(function i() {
                      var a, u, c, f, l, h, d;
                      return o.wrap(
                        function(o) {
                          for (;;)
                            switch ((o.prev = o.next)) {
                              case 0:
                                return (o.next = 2), p(e);
                              case 2:
                                if ((a = o.sent) !== s && 0 !== e[m.taps].length) {
                                  o.next = 6;
                                  break;
                                }
                                return delete e[m.taps], o.abrupt('break', 30);
                              case 6:
                                for (
                                  n = e[m.taps].length,
                                    u = !0,
                                    c = !1,
                                    f = void 0,
                                    o.prev = 10,
                                    l = e[m.taps][Symbol.iterator]();
                                  !(u = (h = l.next()).done);
                                  u = !0
                                )
                                  (d = h.value), v(d, a, r);
                                o.next = 18;
                                break;
                              case 14:
                                (o.prev = 14), (o.t0 = o.catch(10)), (c = !0), (f = o.t0);
                              case 18:
                                (o.prev = 18), (o.prev = 19), u || null == l.return || l.return();
                              case 21:
                                if (((o.prev = 21), !c)) {
                                  o.next = 24;
                                  break;
                                }
                                throw f;
                              case 24:
                                return o.finish(21);
                              case 25:
                                return o.finish(18);
                              case 26:
                                return (o.next = 28), p(t);
                              case 28:
                                o.next = 0;
                                break;
                              case 30:
                              case 'end':
                                return o.stop();
                            }
                        },
                        i,
                        this,
                        [[10, 14, 18, 26], [19, , 21, 25]]
                      );
                    })
                  )).apply(this, arguments);
                }
                !(function() {
                  a.apply(this, arguments);
                })();
              })(e),
            ~e[m.taps].indexOf(t) || e[m.taps].push(t),
            t
          );
        },
        untap: function(e, t) {
          var n = e[m.taps];
          if (n) {
            var r = n.indexOf(t);
            -1 !== r && (n.splice(r, 1), 0 === n.length && v(e));
          }
        },
        untapAll: function(e) {
          e[m.taps] && ((e[m.taps] = []), v(e));
        },
        map: function(e, t) {
          for (
            var n,
              a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
              f = u(a),
              h = t.length,
              m = [],
              y = [],
              g = u(),
              b = 0;
            b < h;
            ++b
          )
            y[b] = (function(e) {
              return function(t) {
                (m[e] = t), 0 == --n && v(g, m.slice());
              };
            })(b);
          function x() {
            return (x = i(
              o.mark(function i() {
                var a, u, v, m, b, x, w;
                return o.wrap(
                  function(o) {
                    for (;;)
                      switch ((o.prev = o.next)) {
                        case 0:
                          for (n = h, a = 0; a < h; ++a) d(t[a], y[a]);
                          return (o.next = 4), p(g);
                        case 4:
                          (u = o.sent), (v = !0), (m = !1), (b = void 0), (o.prev = 8), (x = u[Symbol.iterator]());
                        case 10:
                          if ((v = (w = x.next()).done)) {
                            o.next = 18;
                            break;
                          }
                          if (w.value !== s) {
                            o.next = 15;
                            break;
                          }
                          return c(f), o.abrupt('return');
                        case 15:
                          (v = !0), (o.next = 10);
                          break;
                        case 18:
                          o.next = 24;
                          break;
                        case 20:
                          (o.prev = 20), (o.t0 = o.catch(8)), (m = !0), (b = o.t0);
                        case 24:
                          (o.prev = 24), (o.prev = 25), v || null == x.return || x.return();
                        case 27:
                          if (((o.prev = 27), !m)) {
                            o.next = 30;
                            break;
                          }
                          throw b;
                        case 30:
                          return o.finish(27);
                        case 31:
                          return o.finish(24);
                        case 32:
                          return (o.next = 34), l(f, e.apply(void 0, r(u)));
                        case 34:
                          o.next = 0;
                          break;
                        case 36:
                        case 'end':
                          return o.stop();
                      }
                  },
                  i,
                  this,
                  [[8, 20, 24, 32], [25, , 27, 31]]
                );
              })
            )).apply(this, arguments);
          }
          return (
            (function() {
              x.apply(this, arguments);
            })(),
            f
          );
        }
      };
    },
    function(e, t, n) {
      var r = n(23),
        o = n(24),
        i = n(25);
      e.exports = function(e) {
        return r(e) || o(e) || i();
      };
    },
    function(e, t) {
      e.exports = function(e) {
        if (Array.isArray(e)) {
          for (var t = 0, n = new Array(e.length); t < e.length; t++) n[t] = e[t];
          return n;
        }
      };
    },
    function(e, t) {
      e.exports = function(e) {
        if (Symbol.iterator in Object(e) || '[object Arguments]' === Object.prototype.toString.call(e))
          return Array.from(e);
      };
    },
    function(e, t) {
      e.exports = function() {
        throw new TypeError('Invalid attempt to spread non-iterable instance');
      };
    },
    function(e, t, n) {
      var r = n(3),
        o = n(4),
        i = n(0),
        a = i.chan,
        u = i.timeout,
        c = i.close,
        s = i.CLOSED,
        f = n(1),
        l = f.put,
        p = f.alts;
      function h(e) {
        return '[object Number]' === Object.prototype.toString.call(e) && isFinite(e);
      }
      e.exports = {
        debounce: function(e, t, n, i) {
          var f = { leading: !1, trailing: !0, maxDelay: 0, cancel: a() },
            v = h(n) ? t : 0,
            d = h(n) ? n : t,
            m = Object.assign(f, (h(n) ? i : n) || {}),
            y = a(v),
            g = m.leading,
            b = m.trailing,
            x = m.maxDelay,
            w = m.cancel;
          function k() {
            return (k = o(
              r.mark(function t() {
                var n, o, i, f, h, v, m;
                return r.wrap(
                  function(t) {
                    for (;;)
                      switch ((t.prev = t.next)) {
                        case 0:
                          (n = a()), (o = a()), (i = s);
                        case 3:
                          return (t.next = 5), p([e, n, o, w]);
                        case 5:
                          if (((f = t.sent), (h = f.value), (v = f.channel) !== w)) {
                            t.next = 11;
                            break;
                          }
                          return c(y), t.abrupt('break', 38);
                        case 11:
                          if (v !== e) {
                            t.next = 30;
                            break;
                          }
                          if (h !== s) {
                            t.next = 15;
                            break;
                          }
                          return c(y), t.abrupt('break', 38);
                        case 15:
                          if (((m = n.timeout), (n = u(d)), !m && x > 0 && (o = u(x)), !g)) {
                            t.next = 27;
                            break;
                          }
                          if (m) {
                            t.next = 24;
                            break;
                          }
                          return (t.next = 22), l(y, h);
                        case 22:
                          t.next = 25;
                          break;
                        case 24:
                          i = h;
                        case 25:
                          t.next = 28;
                          break;
                        case 27:
                          b && (i = h);
                        case 28:
                          t.next = 36;
                          break;
                        case 30:
                          if (((n = a()), (o = a()), !b || i === s)) {
                            t.next = 36;
                            break;
                          }
                          return (t.next = 35), l(y, i);
                        case 35:
                          i = s;
                        case 36:
                          t.next = 3;
                          break;
                        case 38:
                        case 'end':
                          return t.stop();
                      }
                  },
                  t,
                  this
                );
              })
            )).apply(this, arguments);
          }
          return (
            (function() {
              k.apply(this, arguments);
            })(),
            y
          );
        },
        throttle: function(e, t, n, i) {
          var f = { leading: !0, trailing: !0, cancel: a() },
            v = h(n) ? t : 0,
            d = h(n) ? n : t,
            m = Object.assign(f, (h(n) ? i : n) || {}),
            y = a(v),
            g = m.leading,
            b = m.trailing,
            x = m.cancel;
          function w() {
            return (w = o(
              r.mark(function t() {
                var n, o, i, f, h, v;
                return r.wrap(
                  function(t) {
                    for (;;)
                      switch ((t.prev = t.next)) {
                        case 0:
                          (n = a()), (o = s);
                        case 2:
                          return (t.next = 4), p([e, n, x]);
                        case 4:
                          if (((i = t.sent), (f = i.value), (h = i.channel) !== x)) {
                            t.next = 12;
                            break;
                          }
                          return c(y), t.abrupt('break', 40);
                        case 12:
                          if (h !== e) {
                            t.next = 30;
                            break;
                          }
                          if (f !== s) {
                            t.next = 16;
                            break;
                          }
                          return c(y), t.abrupt('break', 40);
                        case 16:
                          if (((v = n.timeout) || (n = u(d)), !g)) {
                            t.next = 27;
                            break;
                          }
                          if (v) {
                            t.next = 24;
                            break;
                          }
                          return (t.next = 22), l(y, f);
                        case 22:
                          t.next = 25;
                          break;
                        case 24:
                          b && (o = f);
                        case 25:
                          t.next = 28;
                          break;
                        case 27:
                          b && (o = f);
                        case 28:
                          t.next = 38;
                          break;
                        case 30:
                          if (!b || o === s) {
                            t.next = 37;
                            break;
                          }
                          return (n = u(d)), (t.next = 34), l(y, o);
                        case 34:
                          (o = s), (t.next = 38);
                          break;
                        case 37:
                          n = a();
                        case 38:
                          t.next = 2;
                          break;
                        case 40:
                        case 'end':
                          return t.stop();
                      }
                  },
                  t,
                  this
                );
              })
            )).apply(this, arguments);
          }
          return (
            (function() {
              w.apply(this, arguments);
            })(),
            y
          );
        }
      };
    }
  ]);
});
